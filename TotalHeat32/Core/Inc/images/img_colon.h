
/*******************************************************************************
* image
* filename: unsaved
* name: img_colon
*
* preset name: Цветное A8R8G8B8
* data block size: 8 bit(s), uint8_t
* RLE compression enabled: no
* conversion type: Color, not_used not_used
* bits per pixel: 32
*
* preprocess:
*  main scan direction: top_to_bottom
*  line scan direction: forward
*  inverse: no
*******************************************************************************/

/*
 typedef struct {
     const uint8_t *data;
     uint16_t width;
     uint16_t height;
     uint8_t dataSize;
     } tImage;
*/
#include <stdint.h>



static const uint8_t image_data_img_colon[800] = {
    0xff, 0x20, 0x1c, 0x1b, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x30, 0x2c, 0x2d, 0xff, 0x33, 0x2f, 0x30, 0xff, 0x21, 0x1d, 0x1e, 0xff, 0x1f, 0x1b, 0x1a, 0xff, 0x22, 0x1c, 0x1c, 
    0xff, 0x21, 0x1d, 0x1c, 0xff, 0x6e, 0x6c, 0x6d, 0xff, 0xd0, 0xce, 0xcf, 0xff, 0xe8, 0xe6, 0xe7, 0xff, 0xeb, 0xe9, 0xea, 0xff, 0xd6, 0xd4, 0xd5, 0xff, 0x7d, 0x79, 0x7a, 0xff, 0x21, 0x1d, 0x1c, 
    0xff, 0x36, 0x32, 0x31, 0xff, 0xdd, 0xdd, 0xdd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0xfe, 0xff, 0xf6, 0xf4, 0xf5, 0xff, 0x4f, 0x4b, 0x4a, 
    0xff, 0x5b, 0x57, 0x56, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x79, 0x75, 0x74, 
    0xff, 0x6a, 0x66, 0x65, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xfe, 0xff, 0x89, 0x85, 0x84, 
    0xff, 0x5f, 0x5b, 0x5a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x7b, 0x77, 0x76, 
    0xff, 0x4c, 0x48, 0x47, 0xff, 0xf1, 0xf1, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x62, 0x61, 0x5f, 
    0xff, 0x20, 0x1c, 0x1b, 0xff, 0x92, 0x90, 0x91, 0xff, 0xf3, 0xf1, 0xf2, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xfe, 0xff, 0xa0, 0x9f, 0x9d, 0xff, 0x21, 0x1d, 0x1c, 
    0xff, 0x21, 0x1d, 0x1c, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x43, 0x3f, 0x3e, 0xff, 0x57, 0x53, 0x52, 0xff, 0x59, 0x55, 0x56, 0xff, 0x47, 0x43, 0x42, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x20, 0x1c, 0x1b, 
    0xff, 0x20, 0x1c, 0x1b, 0xff, 0x21, 0x1b, 0x1b, 0xff, 0x21, 0x1b, 0x1b, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x21, 0x1b, 0x1b, 
    0xff, 0x21, 0x1d, 0x1c, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x22, 0x1e, 0x1d, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x20, 0x1c, 0x1b, 
    0xff, 0x20, 0x1c, 0x1b, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x1f, 0x1b, 0x1a, 0xff, 0x21, 0x1d, 0x1c, 
    0xff, 0x20, 0x1c, 0x1b, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x21, 0x1b, 0x1b, 0xff, 0x22, 0x1c, 0x1c, 0xff, 0x21, 0x1b, 0x1b, 0xff, 0x21, 0x1b, 0x1b, 0xff, 0x22, 0x1c, 0x1c, 0xff, 0x21, 0x1b, 0x1b, 
    0xff, 0x21, 0x1d, 0x1c, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x21, 0x1b, 0x1b, 0xff, 0x22, 0x1c, 0x1c, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x21, 0x1d, 0x1c, 
    0xff, 0x21, 0x1d, 0x1c, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x21, 0x1b, 0x1b, 0xff, 0x21, 0x1b, 0x1b, 0xff, 0x21, 0x1b, 0x1b, 0xff, 0x21, 0x1b, 0x1b, 0xff, 0x22, 0x1c, 0x1c, 0xff, 0x22, 0x1c, 0x1c, 
    0xff, 0x20, 0x1c, 0x1b, 0xff, 0x22, 0x1c, 0x1c, 0xff, 0x21, 0x1b, 0x1b, 0xff, 0x22, 0x1c, 0x1c, 0xff, 0x21, 0x1b, 0x1b, 0xff, 0x21, 0x1b, 0x1b, 0xff, 0x23, 0x1d, 0x1d, 0xff, 0x21, 0x1b, 0x1b, 
    0xff, 0x20, 0x1c, 0x1b, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x2c, 0x28, 0x29, 0xff, 0x2f, 0x2b, 0x2c, 0xff, 0x21, 0x1d, 0x1e, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x22, 0x1c, 0x1c, 
    0xff, 0x20, 0x1c, 0x1b, 0xff, 0x6e, 0x6c, 0x6d, 0xff, 0xcc, 0xca, 0xcb, 0xff, 0xe5, 0xe3, 0xe4, 0xff, 0xe7, 0xe5, 0xe6, 0xff, 0xd1, 0xcf, 0xd0, 0xff, 0x7d, 0x79, 0x7a, 0xff, 0x21, 0x1d, 0x1c, 
    0xff, 0x35, 0x31, 0x30, 0xff, 0xdc, 0xdc, 0xdc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0xfe, 0xff, 0xf5, 0xf3, 0xf4, 0xff, 0x4d, 0x49, 0x48, 
    0xff, 0x5b, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x77, 0x73, 0x72, 
    0xff, 0x6b, 0x65, 0x65, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x89, 0x85, 0x84, 
    0xff, 0x5f, 0x59, 0x59, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xfe, 0xff, 0x7c, 0x78, 0x77, 
    0xff, 0x4d, 0x47, 0x47, 0xff, 0xf2, 0xf2, 0xf2, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0xfe, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x63, 0x62, 0x60, 
    0xff, 0x21, 0x1b, 0x1b, 0xff, 0x95, 0x93, 0x94, 0xff, 0xf7, 0xf5, 0xf6, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xfe, 0xff, 0xa2, 0xa1, 0x9f, 0xff, 0x21, 0x1d, 0x1c, 
    0xff, 0x20, 0x1c, 0x1b, 0xff, 0x21, 0x1d, 0x1c, 0xff, 0x47, 0x43, 0x42, 0xff, 0x5a, 0x56, 0x55, 0xff, 0x5c, 0x58, 0x59, 0xff, 0x4a, 0x46, 0x45, 0xff, 0x20, 0x1c, 0x1b, 0xff, 0x21, 0x1d, 0x1c
};
const tImage img_colon = { image_data_img_colon, 8, 25,
    8 };

